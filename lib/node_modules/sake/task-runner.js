
var Proteus = require("proteus"),
    async   = require("async"),
    Task    = require("sake/task")
;

module.exports = Proteus.Class.derive({
    
    init: function (task, callback) {
        this.task = task;
        this.callback = callback;
        this.runPrerequisites();
    },
    
    done: function () {
        var task = this.task,
            callback = this.callback
        ;
        
        task.emit("complete", task);
        if (callback) {
            callback();
        }
    },
    
    runActions: function () {
        var task    = this.task,
            actions = task.actions
        ;

        if (!actions || !actions.length) {
            return this.done();
        }
        
        async.series(
            actions.map(function (action, idx) {
                return function (cb) {
                    var fn = function () {
                            task.removeListener("actionComplete", fn);
                            cb();
                        }
                    ;
                    
                    task.on("actionComplete", fn);
                    action.apply(task, [task].concat(task.arguments));
                };
            }),
            this.done.bind(this)
        );
    },
    
    runPrerequisites: function () {
        var task    = this.task,
            prereqs = task.prerequisites
        ;
        
        if (!prereqs || !prereqs.length) {
            return this.runActions();
        }

        async.series(
            prereqs.map(function (preqName) {
                return function (cb) {
                    var preq = Task.get(preqName),
                        fn = function () {
                            preq.removeListener("complete", fn);
                            cb();
                        }
                    ;
                    
                    preq.on("complete", fn);
                    preq.invoke();
                };
            }),
            this.runActions.bind(this)
        );
    }
});
