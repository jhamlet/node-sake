
var Proteus = require("proteus"),
    async   = require("async"),
    Task    = require("sake/task"),
    options = require("sake/options"),
    log     = require("sake/logger")
;

module.exports = Proteus.Class.derive({
    
    init: function (task, callback) {
        this.task = task;
        this.callback = callback;
        this.runPrerequisites();
    },
    
    done: function () {
        var task = this.task,
            callback = this.callback
        ;
        
        task.emit("complete", task);
        if (callback) {
            callback();
        }
    },
    
    runActions: function () {
        var task    = this.task,
            actions = task.actions,
            isDryRun = options.dryrun
        ;

        log.debug("Starting actions for " + task.fqn);
        if (!actions || !actions.length) {
            log.debug("No actions for " + task.fqn);
            return this.done();
        }
        
        async.series(
            actions.map(function (action, idx) {
                return function (cb) {
                    var fn = function () {
                            log.debug(
                                "Action " + idx + " complete" +
                                (isDryRun ? " (dry-run)" : "")
                            );
                            task.removeListener("actionComplete", fn);
                            cb();
                        }
                    ;
                    
                    task.on("actionComplete", fn);
                    log.debug(
                        "Execute action " + idx + (isDryRun ? " (dry-run)" : "")
                    );
                    if (isDryRun) {
                        task.done();
                    }
                    else {
                        action.apply(task, [task].concat(task.arguments));
                    }
                };
            }),
            this.done.bind(this)
        );
    },
    
    runPrerequisites: function () {
        var task    = this.task,
            prereqs = task.prerequisites
        ;
        
        log.debug("Starting prerequisites for " + task.fqn);
        if (!prereqs || !prereqs.length) {
            log.debug("No prerequisites for " + task.fqn);
            return this.runActions();
        }

        async.series(
            prereqs.map(function (preqName) {
                return function (cb) {
                    var preq = Task.get(preqName),
                        fn = function () {
                            preq.removeListener("complete", fn);
                            cb();
                        }
                    ;
                    
                    preq.on("complete", fn);
                    preq.invoke();
                };
            }),
            this.runActions.bind(this)
        );
    }
});
