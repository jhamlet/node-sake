
var Proteus         = require("proteus"),
    Path            = require("path"),
    nutil           = require("util"),
    taskDescription = "",
    sake,
    Task,
    FileTask,
    FileList,
    FileCreateTask
;
//---------------------------------------------------------------------------
// Privates
//---------------------------------------------------------------------------
function defineTask (TaskClass, name, deps, fn) {
    var task = Task.lookup(name);
    
    if (!fn && typeof deps === "function") {
        fn = deps;
        deps = null;
    }
    
    if (!task) {
        task = new TaskClass(name, deps, fn);
    }
    else if (deps || fn) {
        task.enhance(deps, fn);
    }
    
    task.description = taskDescription;
    taskDescription = "";
    
    return task;
}
//---------------------------------------------------------------------------
// Public/Exports
//---------------------------------------------------------------------------
sake = {
    log: function () {
        var opts = this.options;
        
        if (!opts.quiet || opts.verbose) {
            Proteus.slice(arguments).forEach(function (arg) {
                arg = typeof arg === "string" ?
                    "[" + arg + "]" :
                    nutil.inspect(arg, false, 100);
                process.stderr.write(arg + "\n");
            });
        }
    },
    
    load: function (filepath) {
        require("sake/vm").run(filepath);
    },
    
    include: Proteus.aliasMethod("load"),
    
    description: function (txt) {
        taskDescription += txt;
    },
    desc: Proteus.aliasMethod("description"),
    
    // Task: Task,
    // task: defineTask.bind(Task),
    
    task: function () {
        console.log("task");
    },
    
    taskSync: function (name, deps, fn) {
        return defineTask(Task, name, deps, function (t) {
            if (fn) {
                fn();
            }
            t.done();
        });
    },
    
    // FileTask: FileTask,
    // file: defineTask.bind(FileTask),
    
    // FileCreateTask: FileCreateTask,
    // fileCreate: defineTask.bind(FileCreateTask),
    
    directory: function () {
        
    }
};

module.exports = function (opts) {
    sake.options = opts || {};
    
    module.exports = sake;
    
    sake.Task           = Task              = require("sake/task");
    sake.FileList       = FileList          = require("sake/file-list");
    sake.FileTask       = FileTask          = require("sake/file-task");
    sake.FileCreateTask = FileCreateTask    = require("sake/file-create-task");
    
    return sake;
};
