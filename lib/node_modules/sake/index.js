
var Proteus         = require("proteus"),
    Task            = require("sake/task"),
    FileTask        = require("sake/file-task"),
    FileList        = require("sake/file-list"),
    FileCreateTask  = require("sake/file-create-task"),
    futil           = require("sake/file-utils"),
    taskDescription = ""
;
//---------------------------------------------------------------------------
// Privates
//---------------------------------------------------------------------------
function defineTask (TaskClass, name, deps, fn) {
    var task = Task.lookup(name);
    
    if (!fn && typeof deps === "function") {
        fn = deps;
        deps = null;
    }
    
    if (!task) {
        task = new TaskClass(name, deps, fn);
    }
    else if (deps || fn) {
        task.enhance(deps, fn);
    }
    
    task.description = taskDescription;
    taskDescription = "";
    
    return task;
}
//---------------------------------------------------------------------------
// Public/Exports
//---------------------------------------------------------------------------
module.exports = Proteus.Class.derive({
    
    init: function (opts) {
        this.options = opts;
    },
    
    load: function (filepath) {
        require("sake/vm").run(filepath);
    },
    
    include: Proteus.aliasMethod("load"),
    
    description: function (txt) {
        taskDescription += txt;
    },
    desc: Proteus.aliasMethod("description"),
    
    Task: Task,
    task: defineTask.bind(Task),
    
    taskSync: function (name, deps, fn) {
        return defineTask(Task, name, deps, function (t) {
            if (fn) {
                fn();
            }
            t.done();
        });
    },
    
    FileTask: FileTask,
    file: defineTask.bind(FileTask),
    
    FileCreateTask: FileCreateTask,
    fileCreate: defineTask.bind(FileCreateTask),
    
    directory: function () {
        
    }
});
