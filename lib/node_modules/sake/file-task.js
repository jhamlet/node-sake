
var Path = require("path"),
    FS   = require("fs"),
    Task = require("sake/task")
;

//------------------------------------------------------------------------
// Publics
//------------------------------------------------------------------------
module.exports = Task.derive({
    self: {
        synthesize: function (filepath) {
            return Path.existsSync(filepath) ? new this(filepath) : null;
        }
    },
    
    type: "file-task",
    
    get exists () {
        return Path.existsSync(this.name);
    },
    /**
     * @property isNeeded
     * @type {boolean}
     * @override Task#isNeeded
     */
    get isNeeded () {
        return !this.exists || this.prerequisites.some(function (preq) {
                return Task.get(preq).timestamp > this.timestamp;
            }, this);
    },

    /**
     * @property timestamp
     * @type {integer}
     * @override Task#timestamp
     */
    get timestamp () {
        if (this.exists) {
            return (new Date(FS.statSync(this.name).mtime)).getTime();
        }
        // A non existing file's timestamp is infinitely in the future.
        return Infinity;
    }
});
